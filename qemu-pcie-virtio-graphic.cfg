# q35 - VirtIO guest (graphical console)
# =========================================================
#
# Usage:
#
#   $ qemu-system-x86_64 \
#     -nodefaults \
#     -readconfig q35-virtio-graphical.cfg
#
# based on: /usr/share/doc/qemu-system-data/config/q35-virtio-graphical.cfg.gz
#
# The core PCI devices show up in the guest as:
#
#   00:00.0 Host bridge
#   00:1f.0 ISA bridge / LPC
#   00:1f.2 SATA (AHCI) controller
#   00:1f.3 SMBus controller
#   00:01.0 VGA compatible controller
#   00:1b.0 Audio device
#   00.1c.* PCI bridge (PCI Express Root Ports)
#   01:00.0 SCSI storage controller
#   02:00.0 Ethernet controller
#   03:00.0 USB controller
#

# Disk Information
# =========================================================

[drive "disk"]
  file = "vhdd.qcow2"
  format = "qcow2"
  if = "none"

[drive "optical-disk"]
  file = "install.iso"
  format = "raw"
  if = "none"

[drive "optical-virtio-disk"]
  file = "virtio-win.iso"
  format = "raw"
  if = "none"

# PCI bridge (PCI Express Root Ports)
# =========================================================

[device "pcie.1"]
  driver = "pcie-root-port"
  bus = "pcie.0"
  addr = "1c.0"
  port = "1"
  chassis = "1"
  multifunction = "on"

[device "pcie.2"]
  driver = "pcie-root-port"
  bus = "pcie.0"
  addr = "1c.1"
  port = "2"
  chassis = "2"

[device "pcie.3"]
  driver = "pcie-root-port"
  bus = "pcie.0"
  addr = "1c.2"
  port = "3"
  chassis = "3"

[device "pcie.4"]
  driver = "pcie-root-port"
  bus = "pcie.0"
  addr = "1c.3"
  port = "4"
  chassis = "4"

[device "pcie.5"]
  driver = "pcie-root-port"
  bus = "pcie.0"
  addr = "1c.4"
  port = "5"
  chassis = "5"

[device "pcie.6"]
  driver = "pcie-root-port"
  bus = "pcie.0"
  addr = "1c.5"
  port = "6"
  chassis = "6"

[device "pcie.7"]
  driver = "pcie-root-port"
  bus = "pcie.0"
  addr = "1c.6"
  port = "7"
  chassis = "7"

[device "pcie.8"]
  driver = "pcie-root-port"
  bus = "pcie.0"
  addr = "1c.7"
  port = "8"
  chassis = "8"

# SCSI storage controller (and storage)
# =========================================================

[device "scsi"]
  driver = "virtio-scsi-pci"
  bus = "pcie.1"
  addr = "00.0"

[device "scsi-disk"]
  driver = "scsi-hd"
  bus = "scsi.0"
  drive = "disk"
  bootindex = "1"

#[device "scsi-disk-2"]
#  driver = "scsi-hd"
#  bus = "scsi.0"
#  drive = "disk2"
#  bootindex = "2"

[device "ide-optical-disk"]
  driver = "ide-cd"
  bus = "ide.0"
  drive = "optical-disk"
  bootindex = "3"

[device "ide-optical-virtio-disk"]
  driver = "ide-cd"
  bus = "ide.1"
  drive = "optical-virtio-disk"
  bootindex = "4"

# Ethernet controller
# =========================================================
#
# We use virtio-net for improved performance over emulated
# hardware; on the host side, we take advantage of user
# networking so that the QEMU process doesn't require any
# additional privileges.

[device "net"]
  driver = "virtio-net-pci"
  netdev = "hostnet"
  bus = "pcie.2"
  addr = "00.0"

# USB controller (and input devices)
# =========================================================
#
# We add a virtualization-friendly USB 3.0 controller and
# a USB tablet so that graphical guests can be controlled
# appropriately. A USB keyboard is not needed, as q35
# guests get a PS/2 one added automatically.

[device "usb-xhci"]
  driver = "nec-usb-xhci"
  bus = "pcie.3"
  addr = "00.0"

[device "tablet"]
  driver = "usb-tablet"
  bus = "usb-xhci.0"


# VGA compatible controller
# =========================================================
#
# We plug the QXL video card directly into the PCI Express
# Root Bus as it is a legacy PCI device; this way, we can
# reduce the number of PCI Express controllers in the
# guest.
#
# If you're running the guest on a remote, potentially
# headless host, you will probably want to append something
# like
#
#   -display vnc=127.0.0.1:0
#
# to the command line in order to prevent QEMU from
# creating a graphical display window on the host and
# enable remote access instead.

[device "video"]
  driver = "qxl-vga"
  bus = "pcie.0"
  addr = "01.0"

# Audio device
# =========================================================
#
# Like the video card, the sound card is a legacy PCI
# device and as such can be plugged directly into the PCI
# Express Root Bus.

[device "sound"]
  driver = "ich9-intel-hda"
  bus = "pcie.0"
  addr = "1b.0"

[device "duplex"]
  driver = "hda-duplex"
  bus = "sound.0"
  cad = "0"

# Qemu Network options
# =========================================================

[netdev "hostnet"]
  type = "user"

## if use tap network, please do "sudo tunctl -t tap0 -g netdev" on the HostPC
## before qemu is launched.
#[netdev "tapnet0"]
#  type = "tap"
#  ifname = "tap0"
#  script = "no"
#  downscript = "no"

# Machine options
# =========================================================

[rtc]
  base = "localtime"
  driftfix = "slew"

[machine]
  type = "q35"
  accel = "kvm"
  firmware = "OVMF.fd"

[memory]
  size = "4096"

[smp-opts]
  cpus = "2"
  maxcpus = "2"

[boot-opts]
  order = "d"
  menu = "on"

